{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","React","memo","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","fetchMovie","query","fetch","then","res","json","catch","error","getMovie","a","movieFromServer","url","imdbID","img","Poster","constructedMovie","Title","Plot","Error","FindMovie","addMovie","useState","searchText","setSearchText","errorThroughSearch","setErrorThroughSearch","setMovie","loader","setLoader","textOfSubmitButton","findMovie","event","preventDefault","trim","response","onSubmit","htmlFor","type","value","onChange","target","id","placeholder","cn","disabled","onClick","App","setMovies","newMovie","some","m","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12cf4a76.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = React.memo(({ movie }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\nimport { Movie } from './types/Movie';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=20ddb77b';\n\nfunction fetchMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch((error: ResponseError) => error);\n}\n\nexport async function getMovie(query: string) {\n  const movieFromServer = await fetchMovie(query);\n\n  if ('imdbID' in movieFromServer) {\n    const url = `https://www.imdb.com/title/${movieFromServer.imdbID}`;\n    const img = movieFromServer.Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : movieFromServer.Poster;\n\n    const constructedMovie: Movie = {\n      title: movieFromServer.Title,\n      description: movieFromServer.Plot,\n      imgUrl: img,\n      imdbUrl: url,\n      imdbId: movieFromServer.imdbID,\n    };\n\n    return constructedMovie;\n  }\n\n  throw new Error(movieFromServer.Error);\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [searchText, setSearchText] = useState<string>('');\n  const [errorThroughSearch, setErrorThroughSearch] = useState<boolean>(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loader, setLoader] = useState<boolean>(false);\n\n  const textOfSubmitButton = movie\n    ? 'Search again'\n    : 'Find a movie';\n\n  function handleSetSearchText(\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) {\n    setSearchText(event.target.value);\n    setErrorThroughSearch(false);\n  }\n\n  const addMovieToList = () => {\n    addMovie(movie as Movie);\n    setMovie(null);\n    setSearchText('');\n  };\n\n  const findMovie = async (event: React.FormEvent<HTMLFormElement>) => {\n    setLoader(true);\n    event.preventDefault();\n\n    try {\n      const query: string = searchText.trim();\n      const response: Movie = await getMovie(query);\n\n      setMovie(response);\n    } catch (e) {\n      setErrorThroughSearch(true);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={findMovie} className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              value={searchText}\n              onChange={handleSetSearchText}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': errorThroughSearch })}\n            />\n          </div>\n\n          {errorThroughSearch && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={\n                cn('button is-light', {\n                  'is-loading': loader,\n                })\n              }\n              disabled={!searchText}\n            >\n              {textOfSubmitButton}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const isNewMovieInList = movies.some(m => m.imdbId === newMovie.imdbId);\n\n    if (isNewMovieInList) {\n      return;\n    }\n\n    setMovies((currentMovie) => [...currentMovie, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}